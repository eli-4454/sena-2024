#include "ROBLEX.h"
#include "BluetoothSerial.h"
#include <Adafruit_GFX.h>
#include <Adafruit_SSD1306.h>
#include <Adafruit_GFX.h>
#include <Adafruit_SSD1306.h>


Adafruit_SSD1306 display(128, 64, &Wire, -1); // definir el display de 128x64
// Ejemplo controlar robot con la aplicacion de celular o control remoto

// CONECTAR EL MODULO DRIVER DE MOTOR IZQUIERDO EN EL PUERTO 4,  EL DERECHO EN EL PUERTO 5 Y LA PANTALLA EN CUALQUIER OTRO

ROBLEX ROBLEX;

BluetoothSerial SerialBT;
String RobotName = "<3 KUROMI <3";  // nombre del robot en el buletooth

#define LEFT_PWM MCPWM_UNIT_0
#define RIGHT_PWM MCPWM_UNIT_1


void setup() {


  //Configurar los motores en los puertos respectivos con una frecuencia de pwm de 20000
  ROBLEX.SetupMotor(4, LEFT_PWM, 20000);
  ROBLEX.SetupMotor(5, RIGHT_PWM, 20000);


  display.begin(SSD1306_SWITCHCAPVCC, 0x3C); // iniciar la pantalla OLED
  display.clearDisplay();
  display.drawBitmap(0, 0, ROBLEX.LogoRoblex, 128, 64, WHITE);  //imprimir imagen del logo ROBLEX en la pantalla

  int namePosition = round((128 - RobotName.length() * 5) / 2);  // calcular la posicion del nombre en la pantalla segun el largo del nombre

  //imprimir el nombre en la pantalla
  display.setTextColor(WHITE);
  display.setTextSize(1);
  display.setCursor(namePosition, 0);
  display.print(RobotName);
  display.display();


  Serial.begin(115200);

  SerialBT.begin(RobotName);  //iniciar la comunicacion bluetooth con el nombre asignado
  Serial.println(SerialBT.getBtAddressString());
}

//crear funcion para mover los motores
void Drive(mcpwm_unit_t unit, int out) {

  if (out < 0) {
    ROBLEX.MotorForward(unit, abs(out));

  } else if (out > 0) {
    ROBLEX.MotorBackward(unit, out);

  } else  {
    ROBLEX.MotorStop(unit);
  }
}


void loop() {

  if (SerialBT.available()) {

    String cmd = SerialBT.readStringUntil('\n');
    
    Serial.print(cmd);
    ROBLEX.ReadApp(cmd);  //leer la aplicacion y asigna las siguientes variables
    /*
    ROBLEX.AppValue[0]  = valor del motor derecho
    ROBLEX.AppValue[1]  = valor del motor izquierdo
    ROBLEX.AppValue[2]  = valor del led rojo    
    ROBLEX.AppValue[3]  = valor del led verde
    ROBLEX.AppValue[4]  = valor del led azul     
  */
    //mueve los motores segun el valor de la app
    Drive(RIGHT_PWM, -ROBLEX.AppValue[1].toInt());
    Drive(LEFT_PWM, -ROBLEX.AppValue[0].toInt());

    //cambia el color del led RGB segun el valor de la app
    ROBLEX.Rgb(ROBLEX.AppValue[2].toInt(), ROBLEX.AppValue[3].toInt(), ROBLEX.AppValue[4].toInt());
  }

  if (!SerialBT.connected(200)) {
    ROBLEX.ReadApp("0");

     display.clearDisplay(); // limpia la informaci√≥n del display
  
  // Definir la imagen 'hola mundo', 100x54px
  const uint8_t holaMundoBitmap[] PROGMEM = {
// 'hola', 100x54px
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7f, 0xc0, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7f, 0xc0, 0x7f, 0xc0, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x7f, 0xc0, 0x7f, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x7f, 0xc0, 0x7f, 0xe8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0xff, 
0xc0, 0x7f, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0xff, 0xc0, 0x0f, 0xff, 
0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xff, 0xff, 0x00, 0x0f, 0xff, 0xe0, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x07, 0xff, 0xfe, 0x00, 0x0f, 0xff, 0xff, 0x80, 0x00, 0x00, 0x00, 0x00, 
0x01, 0xff, 0xff, 0xfe, 0x00, 0x0f, 0xff, 0xff, 0x80, 0x00, 0x00, 0x00, 0x00, 0x01, 0xff, 0xff, 
0xfe, 0x00, 0x0f, 0xff, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0x0f, 0xff, 0xff, 0xfe, 0x00, 0x0f, 
0xff, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0x0f, 0xff, 0xff, 0xfe, 0x00, 0x0f, 0xff, 0xff, 0xff, 
0x00, 0x00, 0x00, 0x00, 0x0f, 0xff, 0xff, 0xfe, 0x00, 0x0f, 0xff, 0xff, 0xfa, 0x02, 0xff, 0xff, 
0x88, 0x07, 0xff, 0xff, 0xfe, 0x00, 0x0f, 0xff, 0xff, 0xf0, 0x03, 0xff, 0xff, 0xfc, 0x01, 0xff, 
0xff, 0xfe, 0x00, 0x0f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x00, 
0x0f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x00, 0x0f, 0xff, 0xff, 
0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x00, 0x0f, 0xff, 0xff, 0xff, 0xff, 0xff, 
0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x00, 0x0f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
0xff, 0xff, 0xfe, 0x00, 0x0f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 
0x00, 0x0f, 0xff, 0xff, 0xff, 0xff, 0xf0, 0x00, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x00, 0x07, 0xbf, 
0xff, 0xff, 0xff, 0xe0, 0x00, 0xff, 0xff, 0xff, 0xff, 0x3c, 0x00, 0x00, 0x07, 0xff, 0xff, 0xff, 
0x80, 0x00, 0x1f, 0xff, 0xff, 0xfc, 0x00, 0x00, 0x00, 0x3f, 0xff, 0xff, 0xfc, 0xf0, 0x00, 0xe7, 
0xff, 0xff, 0xff, 0x80, 0x00, 0x00, 0x3f, 0xff, 0xff, 0xfc, 0x70, 0x00, 0xe3, 0xff, 0xff, 0xff, 
0x80, 0x00, 0x00, 0x3f, 0xff, 0xff, 0xfc, 0xfe, 0x07, 0xe3, 0xff, 0xff, 0xff, 0x80, 0x00, 0x00, 
0x3f, 0xff, 0xff, 0xfc, 0x7e, 0x07, 0xe3, 0xff, 0xff, 0xff, 0x80, 0x00, 0x00, 0x3f, 0xff, 0xff, 
0xff, 0x80, 0x00, 0x1f, 0xff, 0xff, 0xff, 0x80, 0x00, 0x00, 0x3f, 0xff, 0xff, 0xff, 0x80, 0x00, 
0x3f, 0xff, 0xff, 0xff, 0xc0, 0x00, 0x01, 0xff, 0xff, 0xff, 0xff, 0xf0, 0x00, 0xff, 0xff, 0xff, 
0xff, 0xf0, 0x00, 0x01, 0xff, 0xff, 0xfb, 0xdf, 0xff, 0xff, 0xfd, 0xab, 0xbf, 0xff, 0xf0, 0x00, 
0x01, 0xff, 0xff, 0x80, 0x03, 0xff, 0xff, 0xfc, 0x00, 0x3f, 0xff, 0xf0, 0x00, 0x01, 0xff, 0xfe, 
0x00, 0x00, 0x1f, 0xff, 0x00, 0x00, 0x07, 0xff, 0xf0, 0x00, 0x01, 0xff, 0xfc, 0x00, 0x00, 0x0f, 
0xff, 0x00, 0x00, 0x07, 0xff, 0xf0, 0x00, 0x01, 0xff, 0xe3, 0x80, 0x00, 0x01, 0xf8, 0x00, 0x00, 
0x38, 0xff, 0xf0, 0x00, 0x01, 0xff, 0xe3, 0x80, 0x00, 0x01, 0xf8, 0x00, 0x00, 0x38, 0xff, 0xf0, 
0x00, 0x01, 0xff, 0xe0, 0x7f, 0x00, 0x00, 0x00, 0x00, 0x0f, 0xc0, 0xff, 0xf0, 0x00, 0x01, 0xff, 
0xe0, 0x7f, 0x00, 0x00, 0x00, 0x00, 0x0f, 0xc0, 0xff, 0xf0, 0x00, 0x01, 0xff, 0xe0, 0x7f, 0xfc, 
0x00, 0x00, 0x03, 0xff, 0xc0, 0xff, 0xf0, 0x00, 0x00, 0x7f, 0xe0, 0x7f, 0xff, 0x00, 0x00, 0x07, 
0xff, 0xc0, 0xff, 0xe0, 0x00, 0x00, 0x3f, 0xe0, 0x7f, 0xff, 0x80, 0x00, 0x1f, 0xff, 0xc0, 0xff, 
0x80, 0x00, 0x00, 0x3f, 0xe0, 0x7f, 0xfc, 0x00, 0x00, 0x03, 0xff, 0xc0, 0xff, 0x80, 0x00, 0x00, 
0x3f, 0xe0, 0x7f, 0xfc, 0x00, 0x00, 0x03, 0xff, 0xc0, 0xff, 0x80, 0x00, 0x00, 0x07, 0xfc, 0x0f, 
0xe0, 0x00, 0x00, 0x00, 0x7e, 0x07, 0xfc, 0x00, 0x00, 0x00, 0x07, 0xfc, 0x07, 0xc0, 0x00, 0x00, 
0x00, 0x7e, 0x07, 0xfc, 0x00, 0x00, 0x00, 0x00, 0xfc, 0x00, 0x00, 0x70, 0x00, 0xe0, 0x00, 0x07, 
0xe0, 0x00, 0x00, 0x00, 0x00, 0x7e, 0x00, 0x00, 0x70, 0x00, 0xe0, 0x00, 0x07, 0xe0, 0x00, 0x00, 
0x00, 0x00, 0x1f, 0xf0, 0x00, 0x0f, 0xff, 0x00, 0x01, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x09, 
0xfa, 0x40, 0x07, 0xf6, 0x00, 0x37, 0xeb, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7f, 0xe0, 0x00, 
0x00, 0x00, 0x7f, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0xff, 0xff, 0xff, 0x80, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0xff, 0xff, 0xff, 0x80, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
  };
  
  // Mostrar la imagen 'hola mundo' en el display
  display.drawBitmap(14, 5, holaMundoBitmap, 100, 54, WHITE);
  
  display.display(); // muestra la imagen creada en la pantalla
  }
}